from telethon import TelegramClient, events
from time import sleep

api_id = 28846045
api_hash = '2bfabb13674fe7ecb587937f026db5e6'
phone = '+998977838293'

client = TelegramClient('977838293', api_id, api_hash)

reply_enabled = True
reply_text = '9860176619018904'
target_group = None  # —Å—é–¥–∞ –±—É–¥–µ—Ç username –≥—Ä—É–ø–ø—ã –±–µ–∑ @

# –ö–æ–º–∞–Ω–¥—ã –∏–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
@client.on(events.NewMessage(chats='me'))
async def favorites_handler(event):
    global reply_enabled, reply_text, target_group
    text = event.message.message.strip()

    if text.startswith('/gr '):
        target_group = text.split('/gr ')[1].strip()
        await event.reply(f"‚úÖ –ì—Ä—É–ø–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {target_group}")

    elif text.startswith('/set_text '):
        reply_text = text.split('/set_text ')[1].strip()
        await event.reply(f"‚úÖ –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {reply_text}")

    elif text == '/off':
        reply_enabled = False
        await event.reply("‚ùå –ê–≤—Ç–æ-–æ—Ç–≤–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")

    elif text == '/on':
        reply_enabled = True
        await event.reply("‚úÖ –ê–≤—Ç–æ-–æ—Ç–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω")

    elif text == '/help':
        help_text = (
            "üìå –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
            "/gr username ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n"
            "/set_text —Ç–µ–∫—Å—Ç ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞\n"
            "/off ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç\n"
            "/on ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç\n"
            "/info ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        )
        await event.reply(help_text)

    elif text == '/info':
        status = "–≤–∫–ª—é—á–µ–Ω" if reply_enabled else "–≤—ã–∫–ª—é—á–µ–Ω"
        info_text = (
            f"‚ÑπÔ∏è –ê–≤—Ç–æ-–æ—Ç–≤–µ—Ç: {status}\n"
            f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {reply_text}\n"
            f"–ì—Ä—É–ø–ø–∞: {target_group if target_group else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}"
        )
        await event.reply(info_text)

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞
@client.on(events.NewMessage)
async def channel_handler(event):
    global reply_enabled, reply_text, target_group

    if not reply_enabled or not target_group:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º username –∫–∞–Ω–∞–ª–∞
    chat_username = getattr(event.chat, 'username', None)
    if chat_username != target_group:
        return

    msg = event.message
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —Ñ–æ—Ä–≤–∞—Ä–¥ –∏–∑ –∫–∞–Ω–∞–ª–∞
    if not msg.forward or not getattr(msg.forward, 'original_fwd', None):
        return

    for attempt in range(3):
        try:
            await msg.reply(reply_text)
            print(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {target_group}")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ø—ã—Ç–∫–∏ {attempt + 1}: {e}")
            sleep(0.5)

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –£–ø—Ä–∞–≤–ª—è–π —á–µ—Ä–µ–∑ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ...")
client.start(phone=phone)
client.run_until_disconnected()
